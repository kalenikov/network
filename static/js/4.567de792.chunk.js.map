{"version":3,"sources":["components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx","components/Dialogs/Dialogs.module.css","components/hoc/WithAuthRedirect.js"],"names":["DialogItem","props","path","id","className","s","dialog","active","to","name","Message","message","maxLenght10","maxLenghtCreator","AddMessageFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","placeholder","validate","required","Dialogs","state","dialogsPage","dialogsElements","dialogs","map","item","key","messagesElements","messages","dialogsItems","values","sendMessage","newMessageBody","compose","connect","dispatch","sendMessageCreator","withAuthRedirect","module","exports","Component","RedirectComponent","this","isAuth","React","auth"],"mappings":"kKAYeA,EARI,SAAAC,GAEf,IAAIC,EAAO,YAAcD,EAAME,GAC/B,OAAO,yBAAKC,UAAWC,IAAEC,OAAS,IAAMD,IAAEE,QACtC,kBAAC,IAAD,CAASC,GAAIN,GAAOD,EAAMQ,QCDnBC,EAJC,SAAAT,GACZ,OAAO,yBAAKG,UAAWC,IAAEM,SAAUV,EAAMU,U,gCC0BvCC,EAAcC,YAAiB,IAgB/BC,EAAsBC,YAAU,CAACC,KAAM,wBAAjBD,EAfL,SAACd,GACpB,OAAO,0BAAMgB,SAAUhB,EAAMiB,cACzB,6BACI,kBAACC,EAAA,EAAD,CAAOC,UAAWC,IACXZ,KAAM,iBACNa,YAAa,gBACbC,SAAU,CAACC,IAAUZ,MAGhC,6BACI,6CAOGa,EAxCC,SAACxB,GAEb,IAAIyB,EAAQzB,EAAM0B,YACdC,EAAkBF,EAAMG,QAAQC,KAAI,SAAAC,GAAI,OAAI,kBAAC,EAAD,CAAYtB,KAAMsB,EAAKtB,KAAMuB,IAAKD,EAAK5B,GAAIA,GAAI4B,EAAK5B,QAChG8B,EAAmBP,EAAMQ,SAASJ,KAAI,SAAAC,GAAI,OAAI,kBAAC,EAAD,CAASpB,QAASoB,EAAKpB,QAASqB,IAAKD,EAAK5B,GAAIA,GAAI4B,EAAK5B,QAMzG,OACI,yBAAKC,UAAWC,IAAEwB,SACd,yBAAKzB,UAAWC,IAAE8B,cACbP,GAEL,yBAAKxB,UAAWC,IAAE6B,UACd,6BAAMD,GACN,kBAACnB,EAAD,CAAqBG,SAXb,SAACmB,GACjBnC,EAAMoC,YAAYD,EAAOE,sB,wBCQlBC,4BACXC,aAhBkB,SAAAd,GAClB,MAAO,CACHC,YAAaD,EAAMC,gBAIF,SAACc,GACtB,MAAO,CACHJ,YAAa,SAACC,GACVG,EAASC,YAAmBJ,SAQpCK,IAFWJ,CAGbd,I,oBCzBFmB,EAAOC,QAAU,CAAC,QAAU,yBAAyB,aAAe,8BAA8B,OAAS,wBAAwB,SAAW,0BAA0B,QAAU,2B,uICGrKF,EAAmB,SAAAG,GAAc,IAEpCC,EAFmC,uKAIjC,OAAKC,KAAK/C,MAAMgD,OAGT,kBAACH,EAAcE,KAAK/C,OAFhB,kBAAC,IAAD,CAAUO,GAAI,eALQ,GAET0C,IAAMJ,WActC,OAFiCN,aAHH,SAACd,GAAD,MAAY,CACtCuB,OAAQvB,EAAMyB,KAAKF,UAEUT,CAAiCO","file":"static/js/4.567de792.chunk.js","sourcesContent":["import React from 'react';\r\nimport s from '../Dialogs.module.css'\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst DialogItem = props => {\r\n\r\n    let path = '/dialogs/' + props.id\r\n    return <div className={s.dialog + ' ' + s.active}>\r\n        <NavLink to={path}>{props.name}</NavLink>\r\n    </div>\r\n}\r\n\r\nexport default DialogItem","import React from 'react';\r\nimport s from '../Dialogs.module.css'\r\n\r\nconst Message = props => {\r\n    return <div className={s.message}>{props.message}</div>\r\n}\r\n\r\nexport default Message","import React from 'react';\r\nimport s from './Dialogs.module.css'\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport Message from \"./Message/Message\";\r\nimport {Field, reduxForm} from 'redux-form'\r\nimport {Textarea} from '../common/FormsControls/FormsControls'\r\nimport {maxLenghtCreator, required} from '../../utils/validators/validators'\r\n\r\nconst Dialogs = (props) => {\r\n\r\n    let state = props.dialogsPage\r\n    let dialogsElements = state.dialogs.map(item => <DialogItem name={item.name} key={item.id} id={item.id}/>)\r\n    let messagesElements = state.messages.map(item => <Message message={item.message} key={item.id} id={item.id}/>)\r\n\r\n    let addNewMessage = (values) => {\r\n        props.sendMessage(values.newMessageBody)\r\n    }\r\n\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogsItems}>\r\n                {dialogsElements}\r\n            </div>\r\n            <div className={s.messages}>\r\n                <div>{messagesElements}</div>\r\n                <AddMessageFormRedux onSubmit={addNewMessage}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nconst maxLenght10 = maxLenghtCreator(10)\r\nconst AddMessageForm = (props) => {\r\n    return <form onSubmit={props.handleSubmit}>\r\n        <div>\r\n            <Field component={Textarea}\r\n                   name={'newMessageBody'}\r\n                   placeholder={'enter message'}\r\n                   validate={[required, maxLenght10]}\r\n            />\r\n        </div>\r\n        <div>\r\n            <button>send</button>\r\n        </div>\r\n    </form>\r\n}\r\n\r\nconst AddMessageFormRedux = reduxForm({form: 'dialogAddMessageForm'})(AddMessageForm)\r\n\r\nexport default Dialogs","import React from 'react';\r\nimport {sendMessageCreator} from '../../redux/dialogs-reducer'\r\nimport Dialogs from './Dialogs'\r\nimport {connect} from 'react-redux'\r\nimport {withAuthRedirect} from '../hoc/WithAuthRedirect'\r\nimport {compose} from 'redux'\r\n\r\n\r\nlet mapStateToProps = state => {\r\n    return {\r\n        dialogsPage: state.dialogsPage\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        sendMessage: (newMessageBody) => {\r\n            dispatch(sendMessageCreator(newMessageBody))\r\n        },\r\n    }\r\n}\r\n\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect\r\n)(Dialogs)\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__1MKEL\",\"dialogsItems\":\"Dialogs_dialogsItems__3BVvA\",\"active\":\"Dialogs_active__VouMm\",\"messages\":\"Dialogs_messages__nC1YL\",\"message\":\"Dialogs_message__1Iwrl\"};","import React from 'react'\r\nimport {Redirect} from 'react-router-dom'\r\nimport {connect} from 'react-redux'\r\n\r\nexport const withAuthRedirect = Component => {\r\n\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) {\r\n                return <Redirect to={'/login'}/>\r\n            }\r\n            return <Component {...this.props}/>\r\n        }\r\n    }\r\n\r\n    let mapStateToPropsRedirect = (state) => ({\r\n        isAuth: state.auth.isAuth\r\n    })\r\n    let ConnectedRedirectComponent = connect(mapStateToPropsRedirect)(RedirectComponent)\r\n\r\n    return ConnectedRedirectComponent\r\n}"],"sourceRoot":""}