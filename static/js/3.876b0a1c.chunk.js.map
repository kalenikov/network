{"version":3,"sources":["components/Profile/ProfileInfo/ProfileStatusHooks.js","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/ProfileInfo/ProfileStatus.js","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx","components/hoc/WithAuthRedirect.js","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css"],"names":["ProfileStatusHooks","props","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","onBlur","updateStatus","autoFocus","onChange","e","currentTarget","value","ProfileInfo","React","Component","profile","className","s","descriptionBlock","src","photos","large","alt","Preloader","Post","item","message","maxLenght10","maxLenghtCreator","AddNewPostForm","onSubmit","handleSubmit","Field","name","component","Textarea","validate","required","placeholder","reduxForm","form","MyPosts","postElements","posts","map","i","key","id","createRef","postsBlock","values","addPost","newPostText","MyPostsContainer","connect","state","profilePage","dispatch","addPostActionCreator","Profile","ProfileContainer","userId","this","match","params","authorizedUserId","history","push","getUserProfile","getStatus","compose","auth","isAuth","withRouter","withAuthRedirect","RedirectComponent","to","module","exports"],"mappings":"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","file":"static/js/3.876b0a1c.chunk.js","sourcesContent":["import React, {Fragment, useEffect, useState} from 'react';\r\n\r\nconst ProfileStatusHooks = (props) => {\r\n\r\n    let [editMode, setEditMode] = useState(false)\r\n    let [status, setStatus] = useState(props.status)\r\n\r\n    useEffect(()=>{\r\n        setStatus(props.status)\r\n    },[props.status])\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true)\r\n    }\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false)\r\n        props.updateStatus(status)\r\n    }\r\n\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value)\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            {!editMode &&\r\n            <div>\r\n                <span onDoubleClick={activateEditMode}>{props.status || '------'}</span>\r\n            </div>\r\n            }\r\n            {editMode &&\r\n            <div>\r\n                <input\r\n                    onBlur={deactivateEditMode}\r\n                    autoFocus={true}\r\n                    onChange={onStatusChange}\r\n                    value={status}/>\r\n            </div>\r\n            }\r\n        </div>\r\n    )\r\n\r\n\r\n}\r\n\r\nexport default ProfileStatusHooks","import React from 'react';\r\nimport s from './ProfileInfo.module.css'\r\nimport Preloader from '../../common/Preloader/Preloader'\r\nimport ProfileStatusHooks from './ProfileStatusHooks'\r\nimport ProfileStatus from './ProfileStatus'\r\n\r\nconst ProfileInfo = ({profile, status, updateStatus}) => {\r\n    // debugger\r\n\r\n    if (!profile) {\r\n        return <Preloader/>\r\n    }\r\n\r\n    return <div>\r\n        <div className={s.descriptionBlock}>\r\n            <img src={profile.photos.large} alt={''}/>\r\n            <ProfileStatusHooks status={status} updateStatus={updateStatus}/>\r\n        </div>\r\n\r\n    </div>\r\n}\r\n\r\nexport default ProfileInfo","import React, {Fragment} from 'react';\r\n\r\nclass ProfileStatus extends React.Component {\r\n\r\n    state = {\r\n        editMode: false,\r\n        status: this.props.status\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (!prevProps.status === this.props.status) {\r\n            this.setState({status: this.props.status})\r\n        }\r\n    }\r\n\r\n    activateEditMode = () => {\r\n        this.setState({editMode: true})\r\n    }\r\n\r\n    deactivateEditMode = () => {\r\n        this.setState({editMode: false})\r\n        this.props.updateStatus(this.state.status)\r\n    }\r\n\r\n    onStatusChange = (e) => {\r\n        this.setState({status: e.currentTarget.value})\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Fragment>\r\n                {!this.state.editMode &&\r\n                <div>\r\n                    <span onDoubleClick={this.activateEditMode}>{this.props.status || '------'}</span>\r\n                </div>\r\n                }\r\n                {this.state.editMode &&\r\n                <div>\r\n                    <input\r\n                        autoFocus={true}\r\n                        onBlur={this.deactivateEditMode}\r\n                        value={this.state.status}\r\n                        onChange={this.onStatusChange}/>\r\n                </div>\r\n                }\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ProfileStatus","import React from 'react';\r\nimport s from './Post.module.css'\r\n\r\nconst Post = (props) => {\r\n    return <div className={s.item}>\r\n        <img src={'https://avatars.mds.yandex.net/get-pdb/1066918/2d75c329-6a10-4b4b-8d87-8303d2eeb4a1/s1200'}/>\r\n        {props.message}\r\n        <div>\r\n            <span>like</span>\r\n        </div>\r\n    </div>\r\n}\r\n\r\nexport default Post","import React from 'react';\r\nimport s from './MyPosts.module.css'\r\nimport Post from \"./Post/Post\";\r\nimport {reduxForm, Field} from 'redux-form'\r\nimport {maxLenghtCreator, required} from '../../../utils/validators/validators'\r\nimport {Textarea} from '../../common/FormsControls/FormsControls'\r\n\r\nconst maxLenght10 = maxLenghtCreator(10)\r\n\r\nlet AddNewPostForm = props => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field\r\n                    name={'newPostText'}\r\n                    component={Textarea}\r\n                    validate={[required, maxLenght10]}\r\n                    placeholder={'Post message'}/>\r\n            </div>\r\n            <div>\r\n                <button>Add post</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nAddNewPostForm = reduxForm({form: 'Profile'})(AddNewPostForm)\r\n\r\nconst MyPosts = (props) => {\r\n\r\n    let postElements = props.posts.map(i => <Post message={i.message} key={i.id}/>)\r\n\r\n    let newPostElement = React.createRef()\r\n\r\n    const onAddPost = (values) => {\r\n        props.addPost(values.newPostText)\r\n    }\r\n    return (\r\n        <div className={s.postsBlock}>\r\n            <h3>my posts</h3>\r\n\r\n            <AddNewPostForm onSubmit={onAddPost}/>\r\n\r\n            <div className={s.posts}>\r\n                {postElements}\r\n            </div>\r\n        </div>)\r\n}\r\n\r\n\r\nexport default MyPosts","import React from 'react';\r\nimport {addPostActionCreator, updateNewPostTextActionCreator} from '../../../redux/profile-reducer'\r\nimport MyPosts from './MyPosts'\r\nimport {connect} from 'react-redux'\r\n\r\nlet mapStateToProps = state => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = dispatch => {\r\n    return {\r\n        addPost: (newPostText) => dispatch(addPostActionCreator(newPostText))\r\n    }\r\n}\r\n\r\nlet MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts)\r\nexport default MyPostsContainer","import React from 'react';\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from './MyPosts/MyPostsContainer'\r\n\r\nconst Profile = (props) => {\r\n    // debugger\r\n    return <div>\r\n        <ProfileInfo\r\n            profile={props.profile}\r\n            status={props.status}\r\n            updateStatus={props.updateStatus}/>\r\n        <MyPostsContainer/>\r\n    </div>\r\n\r\n}\r\n\r\nexport default Profile","import React from 'react';\r\nimport Profile from './Profile'\r\nimport {connect} from 'react-redux'\r\nimport {getStatus, getUserProfile, updateStatus} from '../../redux/profile-reducer'\r\nimport {withRouter} from 'react-router-dom'\r\nimport {compose} from 'redux'\r\nimport {withAuthRedirect} from '../hoc/WithAuthRedirect'\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n        let userId = this.props.match.params.userId\r\n        if (!userId) {\r\n            userId = this.props.authorizedUserId\r\n            if (!userId){\r\n                this.props.history.push('/login')\r\n            }\r\n        }\r\n        this.props.getUserProfile(userId)\r\n        this.props.getStatus(userId)\r\n    }\r\n\r\n    render() {\r\n\r\n        return <div>\r\n            <Profile {...this.props}\r\n                     profile={this.props.profile}\r\n                     status={this.props.status}\r\n                     updateStatus={this.props.updateStatus}/>\r\n        </div>\r\n    }\r\n\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authorizedUserId: state.auth.userId,\r\n    isAuth: state.auth.isAuth,\r\n})\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {getUserProfile, getStatus, updateStatus}),\r\n    withRouter,\r\n    withAuthRedirect,\r\n)(ProfileContainer)","import React from 'react'\r\nimport {Redirect} from 'react-router-dom'\r\nimport {connect} from 'react-redux'\r\n\r\nexport const withAuthRedirect = Component => {\r\n\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) {\r\n                return <Redirect to={'/login'}/>\r\n            }\r\n            return <Component {...this.props}/>\r\n        }\r\n    }\r\n\r\n    let mapStateToPropsRedirect = (state) => ({\r\n        isAuth: state.auth.isAuth\r\n    })\r\n    let ConnectedRedirectComponent = connect(mapStateToPropsRedirect)(RedirectComponent)\r\n\r\n    return ConnectedRedirectComponent\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__h8o1Z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__2gmN_\",\"posts\":\"MyPosts_posts__3KBTd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__162NX\"};"],"sourceRoot":""}